services:
  web:
    build: .
    # command: daphne -b 0.0.0.0 -p 8000 core.asgi:application

    # Normal
    # command: >
    #   sh -c "python manage.py collectstatic --noinput &&
    #      daphne -b 0.0.0.0 -p 8000 core.asgi:application"
    
    # For comfortable work with templates.
    command: python manage.py runserver 0.0.0.0:8000

    volumes:
      - .:/app
    ports:
      - "8080:8000"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network
    restart: no

  db:
    image: postgres:15
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - app-network
    ports:
      - "5438:5432"
    restart: unless-stopped

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: